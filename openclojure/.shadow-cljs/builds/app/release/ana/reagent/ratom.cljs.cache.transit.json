["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.debug !== 'undefined')){\n} else {\nreagent.ratom.debug = false;\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.generation !== 'undefined')){\n} else {\nreagent.ratom.generation = (0);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom._running !== 'undefined')){\n} else {\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn cljs.core.deref(reagent.ratom._running);\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nvar and__4120__auto__ = (len === reagent.ratom.arr_len(y));\nif(and__4120__auto__){\nvar i = (0);\nwhile(true){\nvar or__4131__auto__ = (i === len);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__3512 = (i + (1));\ni = G__3512;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn and__4120__auto__;\n}\n});\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\n\nvar _STAR_ratom_context_STAR__orig_val__3282 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__3283 = obj;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__3283;\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__3282;\n}});\n/**\n * Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n * `deref`ed atoms captured during `in-context`, if any differ from the\n * `watching` field of r.  Clears the `dirty?` flag on r.\n * \n * Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n * the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\nr.captured = null;\n\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\nr.dirty_QMARK_ = false;\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5739__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5739__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn r.captured = [derefed];\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\nthis$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f));\n\nreturn this$.watchesArr = null;\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\nthis$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key));\n\nreturn this$.watchesArr = null;\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?this$.watchesArr = cljs.core.reduce_kv(((function (w){\nreturn (function (p1__3295_SHARP_,p2__3296_SHARP_,p3__3297_SHARP_){\nvar G__3305 = p1__3295_SHARP_;\nG__3305.push(p2__3296_SHARP_);\n\nG__3305.push(p3__3297_SHARP_);\n\nreturn G__3305;\n});})(w))\n,[],this$.watches):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_3517 = (a[i]);\nvar f_3518 = (a[(i + (1))]);\n(f_3518.cljs$core$IFn$_invoke$arity$4 ? f_3518.cljs$core$IFn$_invoke$arity$4(k_3517,this$,old,new$) : f_3518.call(null,k_3517,this$,old,new$));\n\nvar G__3519 = ((2) + i);\ni = G__3519;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s){\ncljs.core._write(writer,[\"#<\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__3307 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__3308 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__3308;\n\ntry{return cljs.core._deref(a);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__3307;\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\">\");\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.rea_queue !== 'undefined')){\n} else {\nreagent.ratom.rea_queue = null;\n}\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\nreagent.ratom.rea_queue = [];\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\nreagent.ratom.rea_queue = null;\n\nvar n__4607__auto___3520 = q.length;\nvar i_3521 = (0);\nwhile(true){\nif((i_3521 < n__4607__auto___3520)){\n(q[i_3521])._queued_run();\n\nvar G__3522 = (i_3521 + (1));\ni_3521 = G__3522;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\nreagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_;\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Atom:\");\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\n}\n\nvar old_value = self__.state;\nself__.state = new_value;\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n});\n\nreagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.RAtom.cljs$lang$type = true;\n\nreagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\";\n\nreagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/RAtom\");\n});\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__3333 = arguments.length;\nswitch (G__3333) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4751__auto__ = [];\nvar len__4730__auto___3535 = arguments.length;\nvar i__4731__auto___3536 = (0);\nwhile(true){\nif((i__4731__auto___3536 < len__4730__auto___3535)){\nargs_arr__4751__auto__.push((arguments[i__4731__auto___3536]));\n\nvar G__3537 = (i__4731__auto___3536 + (1));\ni__4731__auto___3536 = G__3537;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4752__auto__ = (new cljs.core.IndexedSeq(args_arr__4751__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4752__auto__);\n\n}\n});\n\nreagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n});\n\nreagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__3338){\nvar map__3339 = p__3338;\nvar map__3339__$1 = (((((!((map__3339 == null))))?(((((map__3339.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__3339.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__3339):map__3339);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3339__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3339__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n});\n\n/** @this {Function} */\nreagent.ratom.atom.cljs$lang$applyTo = (function (seq3329){\nvar G__3330 = cljs.core.first(seq3329);\nvar seq3329__$1 = cljs.core.next(seq3329);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3330,seq3329__$1);\n});\n\nreagent.ratom.atom.cljs$lang$maxFixedArity = (1);\n\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = o.reagReactionCache;\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__3342 = f;\nvar G__3343 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__3344 = ((function (G__3342,G__3343,m,m__$1,r){\nreturn (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __3538 = o.reagReactionCache;\nvar __3539__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__3538,k);\no.reagReactionCache = __3539__$1;\n\nif((!((obj == null)))){\nobj.reaction = null;\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});})(G__3342,G__3343,m,m__$1,r))\n;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__3342,G__3343,G__3344) : reagent.ratom.make_reaction.call(null,G__3342,G__3343,G__3344));\n})();\nvar v = cljs.core._deref(r__$1);\no.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1);\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\nobj.reaction = r__$1;\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\nreagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nreturn reagent.ratom.cached_reaction(((function (temp__5737__auto__,this$__$1){\nreturn (function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n});})(temp__5737__auto__,this$__$1))\n,self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n});\n\nreagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\n});\n\nreagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n});\n\nreagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track:\");\n});\n\nreagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Track.cljs$lang$type = true;\n\nreagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\";\n\nreagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Track\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__3346 = ((function (t){\nreturn (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});})(t))\n;\nvar G__3347 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__3348 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__3346,G__3347,G__3348) : reagent.ratom.make_reaction.call(null,G__3346,G__3347,G__3348));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___3548 = arguments.length;\nvar i__4731__auto___3549 = (0);\nwhile(true){\nif((i__4731__auto___3549 < len__4730__auto___3548)){\nargs__4736__auto__.push((arguments[i__4731__auto___3549]));\n\nvar G__3550 = (i__4731__auto___3549 + (1));\ni__4731__auto___3549 = G__3550;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nreagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track(f,args);\n});\n\nreagent.ratom.track.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.track.cljs$lang$applyTo = (function (seq3349){\nvar G__3350 = cljs.core.first(seq3349);\nvar seq3349__$1 = cljs.core.next(seq3349);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3350,seq3349__$1);\n});\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___3556 = arguments.length;\nvar i__4731__auto___3557 = (0);\nwhile(true){\nif((i__4731__auto___3557 < len__4730__auto___3556)){\nargs__4736__auto__.push((arguments[i__4731__auto___3557]));\n\nvar G__3558 = (i__4731__auto___3557 + (1));\ni__4731__auto___3557 = G__3558;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nreagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n});\n\nreagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq3351){\nvar G__3352 = cljs.core.first(seq3351);\nvar seq3351__$1 = cljs.core.next(seq3351);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3352,seq3351__$1);\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__3353 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__3354 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__3354;\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__3353;\n}});\n\nreagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\nself__.state = newstate;\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n});\n\nreagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Cursor: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.path)].join(''));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__3356 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3356) : f.call(null,G__3356));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__3357 = a__$1._peek();\nvar G__3358 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3357,G__3358) : f.call(null,G__3357,G__3358));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__3359 = a__$1._peek();\nvar G__3360 = x;\nvar G__3361 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3359,G__3360,G__3361) : f.call(null,G__3359,G__3360,G__3361));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?((function (temp__5737__auto__,oldstate,this$__$1){\nreturn (function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n});})(temp__5737__auto__,oldstate,this$__$1))\n:((function (temp__5737__auto__,oldstate,this$__$1){\nreturn (function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n});})(temp__5737__auto__,oldstate,this$__$1))\n);\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n});\n\nreagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.RCursor.cljs$lang$type = true;\n\nreagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\";\n\nreagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/RCursor\");\n});\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5739__auto__ = v.destroy;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5739__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5737__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5737__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5737__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nvar x__4433__auto__ = (((this$ == null))?null:this$);\nvar m__4434__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4434__auto__.call(null,this$));\n} else {\nvar m__4431__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4431__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n}\n});\n\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nvar x__4433__auto__ = (((this$ == null))?null:this$);\nvar m__4434__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4434__auto__.call(null,this$,f));\n} else {\nvar m__4431__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4431__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nvar x__4433__auto__ = (((this$ == null))?null:this$);\nvar m__4434__auto__ = (reagent.ratom.run[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4434__auto__.call(null,this$));\n} else {\nvar m__4431__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4431__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__3377 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__3378 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__3378;\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__3377;\n}});\n\nreagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\nself__.dirty_QMARK_ = true;\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n});\n\nreagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\nself__.watching = derefed;\n\nvar seq__3383_3611 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__3384_3612 = null;\nvar count__3385_3613 = (0);\nvar i__3386_3614 = (0);\nwhile(true){\nif((i__3386_3614 < count__3385_3613)){\nvar w_3616 = chunk__3384_3612.cljs$core$IIndexed$_nth$arity$2(null,i__3386_3614);\ncljs.core._add_watch(w_3616,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__3617 = seq__3383_3611;\nvar G__3618 = chunk__3384_3612;\nvar G__3619 = count__3385_3613;\nvar G__3620 = (i__3386_3614 + (1));\nseq__3383_3611 = G__3617;\nchunk__3384_3612 = G__3618;\ncount__3385_3613 = G__3619;\ni__3386_3614 = G__3620;\ncontinue;\n} else {\nvar temp__5735__auto___3624 = cljs.core.seq(seq__3383_3611);\nif(temp__5735__auto___3624){\nvar seq__3383_3625__$1 = temp__5735__auto___3624;\nif(cljs.core.chunked_seq_QMARK_(seq__3383_3625__$1)){\nvar c__4550__auto___3626 = cljs.core.chunk_first(seq__3383_3625__$1);\nvar G__3627 = cljs.core.chunk_rest(seq__3383_3625__$1);\nvar G__3628 = c__4550__auto___3626;\nvar G__3629 = cljs.core.count(c__4550__auto___3626);\nvar G__3630 = (0);\nseq__3383_3611 = G__3627;\nchunk__3384_3612 = G__3628;\ncount__3385_3613 = G__3629;\ni__3386_3614 = G__3630;\ncontinue;\n} else {\nvar w_3631 = cljs.core.first(seq__3383_3625__$1);\ncljs.core._add_watch(w_3631,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__3632 = cljs.core.next(seq__3383_3625__$1);\nvar G__3633 = null;\nvar G__3634 = (0);\nvar G__3635 = (0);\nseq__3383_3611 = G__3632;\nchunk__3384_3612 = G__3633;\ncount__3385_3613 = G__3634;\ni__3386_3614 = G__3635;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__3396 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__3397 = null;\nvar count__3398 = (0);\nvar i__3399 = (0);\nwhile(true){\nif((i__3399 < count__3398)){\nvar w = chunk__3397.cljs$core$IIndexed$_nth$arity$2(null,i__3399);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__3636 = seq__3396;\nvar G__3637 = chunk__3397;\nvar G__3638 = count__3398;\nvar G__3639 = (i__3399 + (1));\nseq__3396 = G__3636;\nchunk__3397 = G__3637;\ncount__3398 = G__3638;\ni__3399 = G__3639;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__3396);\nif(temp__5735__auto__){\nvar seq__3396__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__3396__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__3396__$1);\nvar G__3643 = cljs.core.chunk_rest(seq__3396__$1);\nvar G__3644 = c__4550__auto__;\nvar G__3645 = cljs.core.count(c__4550__auto__);\nvar G__3646 = (0);\nseq__3396 = G__3643;\nchunk__3397 = G__3644;\ncount__3398 = G__3645;\ni__3399 = G__3646;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__3396__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__3647 = cljs.core.next(seq__3396__$1);\nvar G__3648 = null;\nvar G__3649 = (0);\nvar G__3650 = (0);\nseq__3396 = G__3647;\nchunk__3397 = G__3648;\ncount__3398 = G__3649;\ni__3399 = G__3650;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n\nreagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{self__.caught = null;\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e3409){var e = e3409;\nself__.state = e;\n\nself__.caught = e;\n\nreturn self__.dirty_QMARK_ = false;\n}});\n\nreagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\nself__.state = res;\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n});\n\nreagent.ratom.Reaction.prototype._set_opts = (function (p__3410){\nvar self__ = this;\nvar map__3411 = p__3410;\nvar map__3411__$1 = (((((!((map__3411 == null))))?(((((map__3411.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__3411.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__3411):map__3411);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3411__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3411__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3411__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3411__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\nthis$.auto_run = auto_run__$1;\n} else {\n}\n\nif((!((on_set == null)))){\nthis$.on_set = on_set;\n} else {\n}\n\nif((!((on_dispose == null)))){\nthis$.on_dispose = on_dispose;\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn this$.nocache_QMARK_ = no_cache;\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Reaction \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(a__$1)),\":\"].join(''));\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\nself__.watching = null;\n\nself__.state = null;\n\nself__.auto_run = null;\n\nself__.dirty_QMARK_ = true;\n\nvar seq__3432_3663 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__3433_3664 = null;\nvar count__3434_3665 = (0);\nvar i__3435_3666 = (0);\nwhile(true){\nif((i__3435_3666 < count__3434_3665)){\nvar w_3671 = chunk__3433_3664.cljs$core$IIndexed$_nth$arity$2(null,i__3435_3666);\ncljs.core._remove_watch(w_3671,this$__$1);\n\n\nvar G__3672 = seq__3432_3663;\nvar G__3673 = chunk__3433_3664;\nvar G__3674 = count__3434_3665;\nvar G__3675 = (i__3435_3666 + (1));\nseq__3432_3663 = G__3672;\nchunk__3433_3664 = G__3673;\ncount__3434_3665 = G__3674;\ni__3435_3666 = G__3675;\ncontinue;\n} else {\nvar temp__5735__auto___3677 = cljs.core.seq(seq__3432_3663);\nif(temp__5735__auto___3677){\nvar seq__3432_3678__$1 = temp__5735__auto___3677;\nif(cljs.core.chunked_seq_QMARK_(seq__3432_3678__$1)){\nvar c__4550__auto___3680 = cljs.core.chunk_first(seq__3432_3678__$1);\nvar G__3681 = cljs.core.chunk_rest(seq__3432_3678__$1);\nvar G__3682 = c__4550__auto___3680;\nvar G__3683 = cljs.core.count(c__4550__auto___3680);\nvar G__3684 = (0);\nseq__3432_3663 = G__3681;\nchunk__3433_3664 = G__3682;\ncount__3434_3665 = G__3683;\ni__3435_3666 = G__3684;\ncontinue;\n} else {\nvar w_3687 = cljs.core.first(seq__3432_3678__$1);\ncljs.core._remove_watch(w_3687,this$__$1);\n\n\nvar G__3689 = cljs.core.next(seq__3432_3678__$1);\nvar G__3690 = null;\nvar G__3691 = (0);\nvar G__3692 = (0);\nseq__3432_3663 = G__3689;\nchunk__3433_3664 = G__3690;\ncount__3434_3665 = G__3691;\ni__3435_3666 = G__3692;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5739__auto__ = this$__$1.on_dispose_arr;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5739__auto__;\nvar n__4607__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4607__auto__)){\nvar fexpr__3460_3695 = (a[i]);\n(fexpr__3460_3695.cljs$core$IFn$_invoke$arity$1 ? fexpr__3460_3695.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__3460_3695.call(null,this$__$1));\n\nvar G__3697 = (i + (1));\ni = G__3697;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = this$__$1.on_dispose_arr;\nif((temp__5737__auto__ == null)){\nreturn this$__$1.on_dispose_arr = [f__$1];\n} else {\nvar a = temp__5737__auto__;\nreturn a.push(f__$1);\n}\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\n\nvar oldval = self__.state;\nself__.state = newval;\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__3471 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__3471) : f__$1.call(null,G__3471));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__3472 = a__$1._peek_at();\nvar G__3473 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__3472,G__3473) : f__$1.call(null,G__3472,G__3473));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__3474 = a__$1._peek_at();\nvar G__3475 = x;\nvar G__3476 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__3474,G__3475,G__3476) : f__$1.call(null,G__3474,G__3475,G__3476));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.flush_BANG_();\n\nreturn this$__$1._run(false);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5739__auto___3713 = self__.caught;\nif((temp__5739__auto___3713 == null)){\n} else {\nvar e_3714 = temp__5739__auto___3713;\nthrow e_3714;\n}\n\nvar non_reactive_3715 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_3715){\nreagent.ratom.flush_BANG_();\n} else {\n}\n\nif(((non_reactive_3715) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_3716 = self__.state;\nself__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_3716,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_3716,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n});\n\nreagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Reaction.cljs$lang$type = true;\n\nreagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\";\n\nreagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Reaction\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___3724 = arguments.length;\nvar i__4731__auto___3725 = (0);\nwhile(true){\nif((i__4731__auto___3725 < len__4730__auto___3724)){\nargs__4736__auto__.push((arguments[i__4731__auto___3725]));\n\nvar G__3726 = (i__4731__auto___3725 + (1));\ni__4731__auto___3725 = G__3726;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nreagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__3492){\nvar map__3493 = p__3492;\nvar map__3493__$1 = (((((!((map__3493 == null))))?(((((map__3493.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__3493.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__3493):map__3493);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3493__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3493__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3493__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n});\n\nreagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq3485){\nvar G__3486 = cljs.core.first(seq3485);\nvar seq3485__$1 = cljs.core.next(seq3485);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3486,seq3485__$1);\n});\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n\nr._set_opts(opts);\n\nr.f = f;\n\nr.auto_run = ((function (r,res){\nreturn (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n});})(r,res))\n;\n\ngoog.object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\nreagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n\n\nreturn self__.state;\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\nself__.changed = true;\n\nself__.state = newval;\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrap:\");\n});\n\nreagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Wrapper.cljs$lang$type = true;\n\nreagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\";\n\nreagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Wrapper\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$with-let","~$reagent.ratom","~$dbg","~$reagent.debug","~$log","^F","~$warn","^F","~$error","^F","~$dev?","^F","~$time","^F"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","^C",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",36,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","^D","~:macro",true],"~$reaction",["^ ","^P",["^Q",[["~$&","^S"]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^T","~$reagent.ratom/reaction","^V","^D","^W",true],"~$unchecked-aset",["^ ","^P",["^Q",[["~$array","~$idx","~$val"],["^[","^10","~$idx2","~$&","~$idxv"]]],"^7",28,"^8",1,"^6","reagent/ratom.clj","^T","~$reagent.ratom/unchecked-aset","^V","^D","^W",true],"~$unchecked-aget",["^ ","^P",["^Q",[["^[","^10"],["^[","^10","~$&","~$idxs"]]],"^7",19,"^8",1,"^6","reagent/ratom.clj","^T","~$reagent.ratom/unchecked-aget","^V","^D","^W",true],"~$run!",["^ ","^P",["^Q",[["~$&","^S"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^T","~$reagent.ratom/run!","^V","^D","^W",true]],"^T","^D","~:op","^V","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^1>","~$obj","~$goog.object","~$cljs.core","^1A","~$goog","^1B","^1@","^1@","~$reagent.impl.batching","^1C","~$clojure.set","^1D","~$util","^1>","~$s","^1D","~$batch","^1C","^F","^F"],"~:seen",["^M",["~:require","~:require-macros"]],"~:uses",null,"^1I",["^ ","^D","^D","^F","^F","^1A","^1A"],"~:form",["^Q",["~$ns","^D",["^Q",["~:refer-clojure","~:exclude",["^N"]]],["^Q",["^1I",["^D","~:refer",["^C"]]]],["^Q",["^1H",["^1>","~:as","^1E"],["^F","~:refer-macros",["^E","^G","^H","^I","^J","^K"]],["^1C","^1P","^1F"],["^1D","^1P","~$s"],["^1@","^1P","^1?"]]]]],"~:flags",["^ ","^1I",["^M",[]],"^1H",["^M",[]]],"~:js-deps",["^ "],"~:deps",["^1B","^1A","^1>","^F","^1C","^1D","^1@"]],"^V","^D","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1583691691465,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom :refer [with-let]])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [dbg log warn error dev? time]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context [obj f]\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n   See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n   `deref`ed atoms captured during `in-context`, if any differ from the\n   `watching` field of r.  Clears the `dirty?` flag on r.\n\n   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n   the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)]\n    (let [len (alength a)]\n      (loop [i 0]\n        (when (< i len)\n          (let [k (aget a i)\n                f (aget a (inc i))]\n            (f k this old new))\n          (recur (+ 2 i)))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^M",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.ratom","js/reagent.ratom.debug","reagent.ratom/debug","js/reagent.ratom.generation","reagent.ratom/generation","js/reagent.ratom.-running","reagent.ratom/-running","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","and__4120__auto__","i","or__4131__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__3282","*ratom-context*-temp-val__3283","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5739__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","reagent.ratom/remove-w","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","reagent.ratom/notify-w","a","p1__3295#","p2__3296#","p3__3297#","cljs.core/reduce-kv","G__3305","k","reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__3307","*ratom-context*-temp-val__3308","cljs.core/-deref","js/reagent.ratom.rea-queue","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4607__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","old-value","more","cljs.core.apply.cljs$core$IFn$_invoke$arity$5","_","new-meta","goog/getUid","var_args","G__3333","reagent.ratom/atom","args-arr__4751__auto__","len__4730__auto__","i__4731__auto__","argseq__4752__auto__","cljs.core/IndexedSeq","p__3338","map__3339","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","seq3329","G__3330","cljs.core/first","cljs.core/next","self__4717__auto__","reagent.ratom/cached-reaction","destroy","m","G__3342","G__3343","G__3344","reagent.ratom/make-reaction","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/dec","v","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5737__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__3346","G__3347","G__3348","args__4736__auto__","argseq__4737__auto__","reagent.ratom/track","seq3349","G__3350","reagent.ratom/track!","seq3351","G__3352","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__3353","*ratom-context*-temp-val__3354","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/reset!","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","G__3356","G__3357","G__3358","G__3359","G__3360","G__3361","reagent.ratom/cursor","src","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","x__4433__auto__","m__4434__auto__","reagent.ratom/dispose!","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__3410","map__3411","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","oldval","G__3471","G__3472","G__3473","G__3474","G__3475","G__3476","*ratom-context*-orig-val__3377","*ratom-context*-temp-val__3378","cljs.core/set","seq__3383","cljs.core/seq","chunk__3384","count__3385","i__3386","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","cljs.core/-add-watch","seq__3396","chunk__3397","count__3398","i__3399","cljs.core/-remove-watch","e3409","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__3432","chunk__3433","count__3434","i__3435","fexpr__3460","p__3492","map__3493","seq3485","G__3486","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]]],"~:cache-keys",["~#cmap",[["^1V","reagent/impl/batching.cljs"],[1582903546242,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^M",[]],"~:deps-syms",["^1B","^1A","^F","^1>"]]],["^1V","goog/math/math.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","~$goog.array","~$goog.asserts"]]],["^1V","goog/array/array.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2<"]]],["^1V","reagent/impl/util.cljs"],[1582903546242,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1A","^F","~$clojure.string"]]],["^1V","goog/debug/error.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/dom/nodetype.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","reagent/ratom.cljs"],[1582903546242,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1A","^1>","^F","^1C","^1D","^1@"]]],["^1V","goog/object/object.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],"~:SHADOW-TIMESTAMP",[1580140326000,1580140308000],["^1V","goog/math/long.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2<","~$goog.reflect"]]],["^1V","goog/string/internal.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/functions/functions.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/structs/map.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1V","goog/asserts/asserts.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1V","goog/uri/uri.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2;","^2<","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1V","goog/base.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",[]]],["^1V","goog/structs/structs.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2;","^1@"]]],["^1V","clojure/string.cljs"],[1580140308880,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1A","^2D","~$goog.string.StringBuffer"]]],["^1V","goog/string/string.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","~$goog.string.internal"]]],["^1V","goog/reflect/reflect.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/string/stringbuffer.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/iter/iter.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2;","^2<","~$goog.functions","~$goog.math"]]],["^1V","cljs/core.cljs"],[1580140308880,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["~$goog.math.Long","~$goog.math.Integer","^2D","^1@","^2;","~$goog.Uri","^2J"]]],["^1V","reagent/debug.cljs"],[1582903546242,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1A"]]],["^1V","goog/math/integer.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","clojure/set.cljs"],[1580140308880,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1A"]]],["^1V","goog/uri/utils.js"],[1580140315187,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2;","^2<","^2D"]]]]],"~:clj-info",["^ ","jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1580663345000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1580140307000,"jar:file:/Users/paulcristianmartin/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/ratom.clj",1582903546000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1580663345000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1580663345000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1580663345000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1580663345000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/debug.clj",1582903546000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1580140308000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"~:shadow/protocol-prefixes",["^M",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^B",["^ ","^C","^D","^E","^F","^G","^F","^H","^F","^I","^F","^J","^F","^K","^F"],"^L",["^M",["^N"]],"^O",["^ ","^C",["^ ","^P",["^Q",[["^R","~$&","^S"]]],"^7",36,"^8",1,"^6","reagent/ratom.clj","^T","^U","^V","^D","^W",true],"^X",["^ ","^P",["^Q",[["~$&","^S"]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^T","^Y","^V","^D","^W",true],"^Z",["^ ","^P",["^Q",[["^[","^10","^11"],["^[","^10","^12","~$&","^13"]]],"^7",28,"^8",1,"^6","reagent/ratom.clj","^T","^14","^V","^D","^W",true],"^15",["^ ","^P",["^Q",[["^[","^10"],["^[","^10","~$&","^16"]]],"^7",19,"^8",1,"^6","reagent/ratom.clj","^T","^17","^V","^D","^W",true],"^18",["^ ","^P",["^Q",[["~$&","^S"]]],"^19","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^T","^1:","^V","^D","^W",true]],"~:shadow/js-access-properties",["^M",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^T","^D","^1<",null,"^1=",["^ ","^1>","^1>","^1?","^1@","^1A","^1A","^1B","^1B","^1@","^1@","^1C","^1C","^1D","^1D","^1E","^1>","~$s","^1D","^1F","^1C","^F","^F"],"^1G",["^M",["^1H","^1I"]],"^1J",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",104,"^8",8,"^9",104,"^:",15,"~:private",true,"^P",["^Q",["~$quote",["^Q",[["~$a","~$writer","~$opts","~$s"]]]]]],"^3F",true,"^T","~$reagent.ratom/pr-atom","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^Q",[["~$a","^3H","^3I","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^8",1,"~:variadic?",false,"^7",104,"~:ret-tag","~$any","^9",104,"~:max-fixed-arity",4,"~:fn-var",true,"^P",["^Q",["^3G",["^Q",[["~$a","^3H","^3I","~$s"]]]]]],"~$->RCursor",["^ ","^3E",null,"^5",["^ ","~:protocols",["^M",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","~$reagent.ratom/IReactiveAtom","~$cljs.core/IDeref","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",256,"^9",256,"^P",["^Q",["^3G",["^Q",[["~$ratom","~$path","^X","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]],"^19","Positional factory function for reagent.ratom/RCursor."],"^3T",["^M",["^3U","^3V","^3W","^3X","^3Y","^3Z","^3[","^40","^41","^42"]],"^T","~$reagent.ratom/->RCursor","^6","reagent/ratom.cljs","^:",17,"^3K",["^Q",[["^45","^46","^X","^47","^48"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^43","^44","^7",256,"^3O","~$reagent.ratom/RCursor","^9",256,"^3Q",5,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^45","^46","^X","^47","^48"]]]]],"^49",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]],"^19","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",62,"^8",8,"^9",62,"^:",29,"^3F",true,"^P",["^Q",["^3G",["^Q",[["~$derefed"]]]]],"^19","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^3F",true,"^T","~$reagent.ratom/notify-deref-watcher!","^6","reagent/ratom.cljs","^:",29,"^3K",["^Q",[["^4="]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",62,"^3O",["^M",[null,"^3P","~$clj-nil"]],"^9",62,"^3Q",1,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^4="]]]]],"^19","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",114,"^8",8,"^9",114,"^:",19,"^3F",true,"^P",["^Q",["^3G",["^Q",[["~$r"]]]]]],"^3F",true,"^T","~$reagent.ratom/rea-enqueue","^6","reagent/ratom.cljs","^:",19,"^3K",["^Q",[["~$r"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",114,"^3O","^3P","^9",114,"^3Q",1,"^3R",true,"^P",["^Q",["^3G",["^Q",[["~$r"]]]]]],"~$in-context",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",36,"^8",8,"^9",36,"^:",18,"^3F",true,"^P",["^Q",["^3G",["^Q",[["^1?","~$f"]]]]]],"^3F",true,"^T","~$reagent.ratom/in-context","^6","reagent/ratom.cljs","^:",18,"^3K",["^Q",[["^1?","~$f"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",36,"^9",36,"^3Q",2,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^1?","~$f"]]]]]],"~$make-track",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",236,"^8",7,"^9",236,"^:",17,"^P",["^Q",["^3G",["^Q",[["~$f","~$args"]]]]]],"^T","~$reagent.ratom/make-track","^6","reagent/ratom.cljs","^:",17,"^3K",["^Q",[["~$f","^4E"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",236,"^3O","~$reagent.ratom/Track","^9",236,"^3Q",2,"^3R",true,"^P",["^Q",["^3G",["^Q",[["~$f","^4E"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^3T",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^40","~$cljs.core/IMeta","^41","^42","~$cljs.core/IWithMeta"]],"^T","~$reagent.ratom/RAtom","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",136,"~:record",false,"^9",136,"~:tag","~$function","^49",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^4J","^41","^42","^4K"]]],"^N",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",181,"^8",7,"^9",181,"^:",11,"^P",["^Q",["^3G",["^Q",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^19","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^3N",true,"~:fixed-arity",1,"^3Q",1,"^3K",["^Q",[["~$x"]]],"^P",["^Q",[["~$x"],["~$x","~$&",["^ ","^4Q",["^4R","^4S"]]]]],"^3M",["^Q",[null,null]]]],"^T","~$reagent.ratom/atom","^6","reagent/ratom.cljs","^:",11,"^4T",["^ ","^3N",true,"^4U",1,"^3Q",1,"^3K",["^Q",[["~$x"]]],"^P",["^Q",[["~$x"],["~$x","~$&",["^ ","^4Q",["^4R","^4S"]]]]],"^3M",["^Q",[null,null]]],"^3K",["^Q",[["~$x"]]],"^3L",null,"^4U",1,"^3M",["^Q",[null,null]],"^8",1,"^3N",true,"~:methods",[["^ ","^4U",1,"^3N",false,"^4O","^4L"],["^ ","^4U",1,"^3N",true,"^4O","^4L"]],"^7",181,"^9",181,"^3Q",1,"^3R",true,"^P",["^Q",[["~$x"],["~$x","~$&",["^ ","^4Q",["^4R","^4S"]]]]],"^19","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",88,"^8",8,"^9",88,"^:",16,"^3F",true,"^P",["^Q",["^3G",["^Q",[["~$this","~$old","~$new"]]]]]],"^3F",true,"^T","~$reagent.ratom/notify-w","^6","reagent/ratom.cljs","^:",16,"^3K",["^Q",[["^4Y","^4Z","^4["]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",88,"^3O","^4?","^9",88,"^3Q",3,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^4Y","^4Z","^4["]]]]]],"~$->Reaction",["^ ","^3E",null,"^5",["^ ","^3T",["^M",["^3U","^3V","^3W","^3X","^3Y","^3Z","^3[","^40","~$reagent.ratom/IRunnable","~$reagent.ratom/IDisposable","^41","^42"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^43","^44","^7",364,"^9",364,"^P",["^Q",["^3G",["^Q",[["~$f","^47","~$dirty?","~$nocache?","~$watching","^48","~$auto-run","~$caught"]]]]],"^49",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]],"^19","Positional factory function for reagent.ratom/Reaction."],"^3T",["^M",["^3U","^3V","^3W","^3X","^3Y","^3Z","^3[","^40","^52","^53","^41","^42"]],"^T","~$reagent.ratom/->Reaction","^6","reagent/ratom.cljs","^:",18,"^3K",["^Q",[["~$f","^47","^54","^55","^56","^48","^57","^58"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^43","^44","^7",364,"^3O","~$reagent.ratom/Reaction","^9",364,"^3Q",8,"^3R",true,"^P",["^Q",["^3G",["^Q",[["~$f","^47","^54","^55","^56","^48","^57","^58"]]]]],"^49",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]],"^19","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",600,"^8",7,"^9",600,"^:",19,"^P",["^Q",["^3G",["^Q",[["~$value","~$callback-fn","^4E"]]]]]],"^T","~$reagent.ratom/make-wrapper","^6","reagent/ratom.cljs","^:",19,"^3K",["^Q",[["^5<","^5=","^4E"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",600,"^3O","~$reagent.ratom/Wrapper","^9",600,"^3Q",3,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^5<","^5=","^4E"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",134,"^8",14,"^9",134,"^:",27,"~:protocol-symbol",true,"~:jsdoc",["^Q",["@interface"]],"~:protocol-info",["^ ","^4W",["^ "]]],"^5A",true,"^T","^40","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",134,"^5C",["^ ","^4W",["^ "]],"~:info",null,"^9",134,"^4O","^3P","~:impls",["^M",["^4;","^4G","^5:","^4L"]],"^5B",["^Q",["@interface"]]],"~$track",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",246,"^8",7,"^9",246,"^:",12,"^P",["^Q",["^3G",["^Q",[["~$f","~$&","^4E"]]]]],"^4T",["^ ","^3N",true,"^4U",1,"^3Q",1,"^3K",[["^Q",["~$f","^4E"]]],"^P",["^Q",[["~$f","~$&","^4E"]]],"^3M",["^Q",[null]]]],"^T","~$reagent.ratom/track","^6","reagent/ratom.cljs","^:",12,"^4T",["^ ","^3N",true,"^4U",1,"^3Q",1,"^3K",[["^Q",["~$f","^4E"]]],"^P",["^Q",[["~$f","~$&","^4E"]]],"^3M",["^Q",[null]]],"^3K",[["^Q",["~$f","^4E"]]],"^3L",null,"^4U",1,"^3M",["^Q",[null]],"^8",1,"^3N",true,"^4W",[["^ ","^4U",1,"^3N",true,"^4O","^4G"]],"^7",246,"^3O","^3P","^9",246,"^3Q",1,"^3R",true,"^P",["^Q",[["~$f","~$&","^4E"]]]],"~$dispose!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",346,"^8",4,"^9",346,"^:",12,"~:protocol","^53","^19",null,"^P",["^Q",["^3G",["^Q",[["^4Y"]]]]]],"^5I","^53","^T","~$reagent.ratom/dispose!","^6","reagent/ratom.cljs","^:",12,"^3K",["^Q",[["^4Y"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",345,"^3O","^3P","^9",346,"^3Q",1,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^4Y"]]]]],"^19",null],"~$arr-eq",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",27,"^8",17,"^9",27,"^:",23,"^4O","~$boolean","^3F",true,"^P",["^Q",["^3G",["^Q",[["~$x","~$y"]]]]]],"^3F",true,"^T","~$reagent.ratom/arr-eq","^6","reagent/ratom.cljs","^:",23,"^3K",["^Q",[["~$x","~$y"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",27,"^3O","^5L","^9",27,"^3Q",2,"^4O","^5L","^3R",true,"^P",["^Q",["^3G",["^Q",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",352,"^8",8,"^9",352,"^:",30,"^3F",true,"^P",["^Q",["^3G",["^Q",[["^4Y","~$sender","^4Z","^4["]]]]]],"^3F",true,"^T","~$reagent.ratom/handle-reaction-change","^6","reagent/ratom.cljs","^:",30,"^3K",["^Q",[["^4Y","^5O","^4Z","^4["]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",352,"^3O","^3P","^9",352,"^3Q",4,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^4Y","^5O","^4Z","^4["]]]]]],"~$run",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",350,"^8",4,"^9",350,"^:",7,"^5I","^52","^19",null,"^P",["^Q",["^3G",["^Q",[["^4Y"]]]]]],"^5I","^52","^T","~$reagent.ratom/run","^6","reagent/ratom.cljs","^:",7,"^3K",["^Q",[["^4Y"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",349,"^3O","^3P","^9",350,"^3Q",1,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^4Y"]]]]],"^19",null],"~$add-on-dispose!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",347,"^8",4,"^9",347,"^:",19,"^5I","^53","^19",null,"^P",["^Q",["^3G",["^Q",[["^4Y","~$f"]]]]]],"^5I","^53","^T","~$reagent.ratom/add-on-dispose!","^6","reagent/ratom.cljs","^:",19,"^3K",["^Q",[["^4Y","~$f"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",345,"^3O","^3P","^9",347,"^3Q",2,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^4Y","~$f"]]]]],"^19",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",523,"^8",16,"^9",523,"^:",29,"^3F",true],"^3F",true,"^T","~$reagent.ratom/temp-reaction","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",523,"^9",523,"^4O","^5:"],"~$make-track!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",239,"^8",7,"^9",239,"^:",18,"^P",["^Q",["^3G",["^Q",[["~$f","^4E"]]]]]],"^T","~$reagent.ratom/make-track!","^6","reagent/ratom.cljs","^:",18,"^3K",["^Q",[["~$f","^4E"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",239,"^3O","^3P","^9",239,"^3Q",2,"^3R",true,"^P",["^Q",["^3G",["^Q",[["~$f","^4E"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",30,"^3F",true],"^3F",true,"^T","~$reagent.ratom/generation","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",12,"^9",12,"^4O","~$number"],"~$run-in-reaction",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",526,"^8",7,"^9",526,"^:",22,"^P",["^Q",["^3G",["^Q",[["~$f","^1?","~$key","^5Q","^3I"]]]]],"^19","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^T","~$reagent.ratom/run-in-reaction","^6","reagent/ratom.cljs","^:",22,"^3K",["^Q",[["~$f","^1?","^61","^5Q","^3I"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",526,"^3O","^3P","^9",526,"^3Q",5,"^3R",true,"^P",["^Q",["^3G",["^Q",[["~$f","^1?","^61","^5Q","^3I"]]]]],"^19","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",345,"^8",14,"^9",345,"^:",25,"^5A",true,"^5B",["^Q",["@interface"]],"^5C",["^ ","^4W",["^ ","^5H",[["^4Y"]],"^5S",[["^4Y","~$f"]]]]],"^5A",true,"^T","^53","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",345,"^5C",["^ ","^4W",["^ ","^5H",[["^4Y"]],"^5S",[["^4Y","~$f"]]]],"^5D",null,"^9",345,"^4O","^3P","^5E",["^M",["^5:"]],"^5B",["^Q",["@interface"]]],"~$check-watches",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",73,"^8",8,"^9",73,"^:",21,"^3F",true,"^P",["^Q",["^3G",["^Q",[["^4Z","^4["]]]]]],"^3F",true,"^T","~$reagent.ratom/check-watches","^6","reagent/ratom.cljs","^:",21,"^3K",["^Q",[["^4Z","^4["]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",73,"^9",73,"^3Q",2,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^4Z","^4["]]]]]],"~$with-let-destroy",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",332,"^8",7,"^9",332,"^:",23,"^P",["^Q",["^3G",["^Q",[["~$v"]]]]]],"^T","~$reagent.ratom/with-let-destroy","^6","reagent/ratom.cljs","^:",23,"^3K",["^Q",[["~$v"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",332,"^3O",["^M",["^3P","^4?"]],"^9",332,"^3Q",1,"^3R",true,"^P",["^Q",["^3G",["^Q",[["~$v"]]]]]],"~$make-reaction",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",514,"^8",7,"^9",514,"^:",20,"^P",["^Q",["^3G",["^Q",[["~$f","~$&",["^ ","^4Q",["^57","~$on-set","~$on-dispose"]]]]]]],"^4T",["^ ","^3N",true,"^4U",1,"^3Q",1,"^3K",[["^Q",["~$f",["^ ","^4Q",["^57","^69","^6:"]]]]],"^P",["^Q",[["~$f","~$&",["^ ","^4Q",["^57","^69","^6:"]]]]],"^3M",["^Q",[null]]]],"^T","~$reagent.ratom/make-reaction","^6","reagent/ratom.cljs","^:",20,"^4T",["^ ","^3N",true,"^4U",1,"^3Q",1,"^3K",[["^Q",["~$f",["^ ","^4Q",["^57","^69","^6:"]]]]],"^P",["^Q",[["~$f","~$&",["^ ","^4Q",["^57","^69","^6:"]]]]],"^3M",["^Q",[null]]],"^3K",[["^Q",["~$f",["^ ","^4Q",["^57","^69","^6:"]]]]],"^3L",null,"^4U",1,"^3M",["^Q",[null]],"^8",1,"^3N",true,"^4W",[["^ ","^4U",1,"^3N",true,"^4O","^5:"]],"^7",514,"^3O","^3P","^9",514,"^3Q",1,"^3R",true,"^P",["^Q",[["~$f","~$&",["^ ","^4Q",["^57","^69","^6:"]]]]]],"~$add-w",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",78,"^8",8,"^9",78,"^:",13,"^3F",true,"^P",["^Q",["^3G",["^Q",[["^4Y","^61","~$f"]]]]]],"^3F",true,"^T","~$reagent.ratom/add-w","^6","reagent/ratom.cljs","^:",13,"^3K",["^Q",[["^4Y","^61","~$f"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",78,"^9",78,"^3Q",3,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^4Y","^61","~$f"]]]]]],"~$Reaction",["^ ","^4I",8,"^3T",["^M",["^3U","^3V","^3W","^3X","^3Y","^3Z","^3[","^40","^52","^53","^41","^42"]],"^T","^5:","^6","reagent/ratom.cljs","^:",18,"^4M",true,"^8",10,"^7",364,"^4N",false,"^9",364,"^4O","^4P","^49",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]]],"~$flush!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",120,"^8",7,"^9",120,"^:",13,"^P",["^Q",["^3G",["^Q",[[]]]]]],"^T","~$reagent.ratom/flush!","^6","reagent/ratom.cljs","^:",13,"^3K",["^Q",[[]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",120,"^3O","^4?","^9",120,"^3Q",0,"^3R",true,"^P",["^Q",["^3G",["^Q",[[]]]]]],"~$RCursor",["^ ","^4I",5,"^3T",["^M",["^3U","^3V","^3W","^3X","^3Y","^3Z","^3[","^40","^41","^42"]],"^T","^4;","^6","reagent/ratom.cljs","^:",17,"^4M",true,"^8",10,"^7",256,"^4N",false,"^9",256,"^4O","^4P","^49",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]]],"~$cached-reaction",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",191,"^8",8,"^9",191,"^:",23,"^3F",true,"^P",["^Q",["^3G",["^Q",[["~$f","~$o","~$k","^1?","~$destroy"]]]]]],"^3F",true,"^T","~$reagent.ratom/cached-reaction","^6","reagent/ratom.cljs","^:",23,"^3K",["^Q",[["~$f","~$o","~$k","^1?","^6C"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",191,"^3O","^3P","^9",191,"^3Q",5,"^3R",true,"^P",["^Q",["^3G",["^Q",[["~$f","~$o","~$k","^1?","^6C"]]]]]],"~$Track",["^ ","^4I",3,"^3T",["^M",["^3W","^3X","^40","^41","^42"]],"^T","^4G","^6","reagent/ratom.cljs","^:",15,"^4M",true,"^8",10,"^7",215,"^4N",false,"^9",215,"^4O","^4P","^49",["^M",["^3W","^3X","^41","^42"]]],"~$debug",["^ ","^T","~$reagent.ratom/debug","^6","reagent/ratom.cljs","^7",11,"^8",1,"^9",11,"^:",24,"^4O","^5L","^5",["^ ","^6","reagent/ratom.cljs","^7",11,"^8",19,"^9",11,"^:",24,"^4O","^5L"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",20,"^9",13,"^:",28,"^3F",true],"^3F",true,"^T","~$reagent.ratom/-running","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",13,"^9",13,"^4O","~$cljs.core/Atom"],"~$cursor",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",318,"^8",7,"^9",318,"^:",13,"^P",["^Q",["^3G",["^Q",[["~$src","^46"]]]]]],"^T","~$reagent.ratom/cursor","^6","reagent/ratom.cljs","^:",13,"^3K",["^Q",[["^6L","^46"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",318,"^3O","^4;","^9",318,"^3Q",2,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^6L","^46"]]]]]],"~$Wrapper",["^ ","^4I",4,"^3T",["^M",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]],"^T","^5?","^6","reagent/ratom.cljs","^:",17,"^4M",true,"^8",10,"^7",553,"^4N",false,"^9",553,"^4O","^4P","^49",["^M",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]]],"~$running",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",21,"^8",7,"^9",21,"^:",14,"^P",["^Q",["^3G",["^Q",[[]]]]]],"^T","~$reagent.ratom/running","^6","reagent/ratom.cljs","^:",14,"^3K",["^Q",[[]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",21,"^3O","^3P","^9",21,"^3Q",0,"^3R",true,"^P",["^Q",["^3G",["^Q",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",349,"^8",14,"^9",349,"^:",23,"^5A",true,"^5B",["^Q",["@interface"]],"^5C",["^ ","^4W",["^ ","^5Q",[["^4Y"]]]]],"^5A",true,"^T","^52","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",349,"^5C",["^ ","^4W",["^ ","^5Q",[["^4Y"]]]],"^5D",null,"^9",349,"^4O","^3P","^5E",["^M",["^5:"]],"^5B",["^Q",["@interface"]]],"~$reactive?",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",16,"^9",15,"^:",25,"^4O","^5L","^P",["^Q",["^3G",["^Q",[[]]]]]],"^T","~$reagent.ratom/reactive?","^6","reagent/ratom.cljs","^:",25,"^3K",["^Q",[[]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",15,"^3O","^5L","^9",15,"^3Q",0,"^4O","^5L","^3R",true,"^P",["^Q",["^3G",["^Q",[[]]]]]],"~$deref-capture",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",43,"^8",8,"^9",43,"^:",21,"^3F",true,"^P",["^Q",["^3G",["^Q",[["~$f","~$r"]]]]],"^19","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n   `deref`ed atoms captured during `in-context`, if any differ from the\n   `watching` field of r.  Clears the `dirty?` flag on r.\n\n   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n   the reaction is also added to the list of watches on each ratoms f derefs."],"^3F",true,"^T","~$reagent.ratom/deref-capture","^6","reagent/ratom.cljs","^:",21,"^3K",["^Q",[["~$f","~$r"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",43,"^3O","^3P","^9",43,"^3Q",2,"^3R",true,"^P",["^Q",["^3G",["^Q",[["~$f","~$r"]]]]],"^19","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n   `deref`ed atoms captured during `in-context`, if any differ from the\n   `watching` field of r.  Clears the `dirty?` flag on r.\n\n   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n   the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",112,"^8",20,"^9",112,"^:",29,"^3F",true],"^3F",true,"^T","~$reagent.ratom/rea-queue","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",112,"^9",112,"^4O","^4?"],"~$with-let-values",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",336,"^8",7,"^9",336,"^:",22,"^P",["^Q",["^3G",["^Q",[["^61"]]]]]],"^T","~$reagent.ratom/with-let-values","^6","reagent/ratom.cljs","^:",22,"^3K",["^Q",[["^61"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",336,"^3O",["^M",["^3P","^["]],"^9",336,"^3Q",1,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^61"]]]]]],"~$track!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",250,"^8",7,"^9",250,"^:",13,"^P",["^Q",["^3G",["^Q",[["~$f","~$&","^4E"]]]]],"^4T",["^ ","^3N",true,"^4U",1,"^3Q",1,"^3K",[["^Q",["~$f","^4E"]]],"^P",["^Q",[["~$f","~$&","^4E"]]],"^3M",["^Q",[null]]]],"^T","~$reagent.ratom/track!","^6","reagent/ratom.cljs","^:",13,"^4T",["^ ","^3N",true,"^4U",1,"^3Q",1,"^3K",[["^Q",["~$f","^4E"]]],"^P",["^Q",[["~$f","~$&","^4E"]]],"^3M",["^Q",[null]]],"^3K",[["^Q",["~$f","^4E"]]],"^3L",null,"^4U",1,"^3M",["^Q",[null]],"^8",1,"^3N",true,"^4W",[["^ ","^4U",1,"^3N",true,"^4O","^3P"]],"^7",250,"^3O","^3P","^9",250,"^3Q",1,"^3R",true,"^P",["^Q",[["~$f","~$&","^4E"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",10,"^8",20,"^9",10,"^:",35,"~:dynamic",true,"~:declared",true],"^T","~$reagent.ratom/*ratom-context*","^6","reagent/ratom.cljs","^:",35,"^8",1,"^71",true,"^7",10,"^72",true,"^9",10],"~$check-derefs",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",545,"^8",7,"^9",545,"^:",19,"^P",["^Q",["^3G",["^Q",[["~$f"]]]]]],"^T","~$reagent.ratom/check-derefs","^6","reagent/ratom.cljs","^:",19,"^3K",["^Q",[["~$f"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",545,"^3O","~$cljs.core/IVector","^9",545,"^3Q",1,"^3R",true,"^P",["^Q",["^3G",["^Q",[["~$f"]]]]]],"~$remove-w",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",83,"^8",8,"^9",83,"^:",16,"^3F",true,"^P",["^Q",["^3G",["^Q",[["^4Y","^61"]]]]]],"^3F",true,"^T","~$reagent.ratom/remove-w","^6","reagent/ratom.cljs","^:",16,"^3K",["^Q",[["^4Y","^61"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",83,"^9",83,"^3Q",2,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^4Y","^61"]]]]]],"~$->Wrapper",["^ ","^3E",null,"^5",["^ ","^3T",["^M",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^43","^44","^7",553,"^9",553,"^P",["^Q",["^3G",["^Q",[["^47","~$callback","~$changed","^48"]]]]],"^49",["^M",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]],"^19","Positional factory function for reagent.ratom/Wrapper."],"^3T",["^M",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]],"^T","~$reagent.ratom/->Wrapper","^6","reagent/ratom.cljs","^:",17,"^3K",["^Q",[["^47","^7:","^7;","^48"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^43","^44","^7",553,"^3O","^5?","^9",553,"^3Q",4,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^47","^7:","^7;","^48"]]]]],"^49",["^M",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]],"^19","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",24,"^8",16,"^9",24,"^:",23,"^4O","^5[","^3F",true,"^P",["^Q",["^3G",["^Q",[["~$x"]]]]]],"^3F",true,"^T","~$reagent.ratom/arr-len","^6","reagent/ratom.cljs","^:",23,"^3K",["^Q",[["~$x"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^7",24,"^3O","^5[","^9",24,"^3Q",1,"^4O","^5[","^3R",true,"^P",["^Q",["^3G",["^Q",[["~$x"]]]]]],"~$->RAtom",["^ ","^3E",null,"^5",["^ ","^3T",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^40","^4J","^41","^42","^4K"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^43","^44","^7",136,"^9",136,"^P",["^Q",["^3G",["^Q",[["^47","^4R","^4S","^48"]]]]],"^49",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^4J","^41","^42","^4K"]],"^19","Positional factory function for reagent.ratom/RAtom."],"^3T",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^40","^4J","^41","^42","^4K"]],"^T","~$reagent.ratom/->RAtom","^6","reagent/ratom.cljs","^:",15,"^3K",["^Q",[["^47","^4R","^4S","^48"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^43","^44","^7",136,"^3O","^4L","^9",136,"^3Q",4,"^3R",true,"^P",["^Q",["^3G",["^Q",[["^47","^4R","^4S","^48"]]]]],"^49",["^M",["^3U","^3V","^3W","^3X","^3Z","^3[","^4J","^41","^42","^4K"]],"^19","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^3E",null,"^5",["^ ","^3T",["^M",["^3W","^3X","^40","^41","^42"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^43","^44","^7",215,"^9",215,"^P",["^Q",["^3G",["^Q",[["~$f","^4E","^X"]]]]],"^49",["^M",["^3W","^3X","^41","^42"]],"^19","Positional factory function for reagent.ratom/Track."],"^3T",["^M",["^3W","^3X","^40","^41","^42"]],"^T","~$reagent.ratom/->Track","^6","reagent/ratom.cljs","^:",15,"^3K",["^Q",[["~$f","^4E","^X"]]],"^3L",null,"^3M",["^Q",[null,null]],"^8",1,"^3N",false,"^43","^44","^7",215,"^3O","^4G","^9",215,"^3Q",3,"^3R",true,"^P",["^Q",["^3G",["^Q",[["~$f","^4E","^X"]]]]],"^49",["^M",["^3W","^3X","^41","^42"]],"^19","Positional factory function for reagent.ratom/Track."]],"^1I",["^ ","^D","^D","^F","^F","^1A","^1A"],"~:cljs.analyzer/constants",["^ ","^1G",["^M",["~:on-set","^58","^56","^5L","^X","^7:","^5","~:else","^46","^4E","~:validator","^48","^4R","^4S","^54","~:no-cache","^45","^47","~:auto-run","~:on-dispose","^4O","~:mutable","^7;","^57","^55","~$f"]],"~:order",["^47","^7J","^4R","^4S","^48","^5","^7F","^7E","^7I","~$f","^4E","^X","^7H","^45","^46","^7D","^7G","^54","^4O","^5L","^55","^56","^57","^58","^7:","^7;"]],"^1R",["^ ","^1I",["^M",[]],"^1H",["^M",[]]],"^1S",["^ "],"^1T",["^1B","^1A","^1>","^F","^1C","^1D","^1@"]],"^V","^D","~:ns-specs",["^ "],"~:ns-spec-vars",["^M",[]],"~:compiler-options",["^26",[["^7N","~:static-fns"],true,["^7N","~:shadow-tweaks"],null,["^7N","~:elide-asserts"],true,["^7N","~:optimize-constants"],null,["^7N","^1Y"],null,["^7N","~:external-config"],null,["^7N","~:tooling-config"],null,["^7N","~:emit-constants"],null,["^7N","~:load-tests"],false,["^7N","~:form-size-threshold"],null,["^7N","~:infer-externs"],true,["^7N","^1["],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^7N","~:fn-invoke-direct"],null,["^7N","~:source-map"],null]]]